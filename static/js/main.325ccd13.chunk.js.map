{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","todoId","filterStatus","filterTitle","selectedUser","userId","setState","props","valueFilter","event","target","value","handlerInput","filterByStatus","todo","completed","filterByTitle","title","toLowerCase","includes","todos","this","filteredTodos","filter","className","onChange","map","key","id","classNames","type","checked","readOnly","onClick","Component","requestToTheServer","url","fetch","then","response","ok","Error","status","statusText","json","getUser","data","CurrentUser","user","prevProps","name","email","phone","clearUserInfo","App","selectedUserId","userID","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.325ccd13.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport classNames  from 'classnames';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\n\nexport class TodoList extends Component {\n  state = {\n    todoId: 0,\n    filterStatus: 'all',\n    filterTitle: '',\n  };\n\n  selectedUser = (todoId, userId) => {\n    this.setState({ todoId });\n    this.props.selectedUser(userId);\n  }\n\n  valueFilter = (event) => {\n    this.setState({ filterStatus: event.target.value });\n  }\n\n  handlerInput = (event) => {\n    this.setState({ filterTitle: event.target.value });\n  }\n\n  filterByStatus = (todo) => {\n    const { filterStatus } = this.state;\n\n    switch (filterStatus) {\n      case 'completed': return todo.completed;\n      case 'active': return !todo.completed;\n      default: return true;\n    }\n  }\n\n  filterByTitle = (todo) => {\n    const { filterTitle } = this.state;\n\n    if (todo.title === null) {\n      return;\n    }\n\n    return todo.title\n                  .toLowerCase()\n                  .includes(filterTitle.toLowerCase());\n  }\n\n  render() {\n    const { todos } = this.props;\n    const { todoId } = this.state;\n\n    const filteredTodos = todos\n      .filter(this.filterByStatus)\n      .filter(this.filterByTitle);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <form>\n            <label className=\"TodoList__label\">\n              Find todo:\n              <input\n                onChange={this.handlerInput}\n                className=\"TodoList__filter\"\n              />\n            </label>\n\n            <label className=\"TodoList__label\">\n              Status:\n              <select\n                className=\"TodoList__select\"\n                onChange={event => this.valueFilter(event)}\n              >\n                <option value=\"all\">All</option>\n                <option value=\"active\">Active</option>\n                <option value=\"completed\">Completed</option>\n              </select>\n            </label>\n          </form>\n          <ul className=\"TodoList__list\">\n\n            {filteredTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames('TodoList__item', {\n                  'TodoList__item--checked': todo.completed,\n                  'TodoList__item--unchecked': !todo.completed,\n                })}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    readOnly\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  onClick={() => this.selectedUser(todo.id, todo.userId)}\n                  className={classNames('TodoList__user-button', 'button', {\n                    'TodoList__user-button--selected': todo.id === todoId,\n                  })}\n                  type=\"button\"\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  selectedUser: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","const API_URL = 'https://mate-api.herokuapp.com';\n\nconst requestToTheServer = url => (\n  fetch(`${API_URL}${url}`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status}: ${response.statusText}`);\n      }\n\n      return response.json();\n    })\n);\n\nexport const getTodos = () => requestToTheServer('/todos')\n  .then(response => response.data);\n\nexport const getUser = userId => requestToTheServer(`/users/${userId}`)\n  .then(response => response.data);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api/api';\n\nexport class CurrentUser extends Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    const { userId } = this.props;\n\n    getUser(userId).then(user => this.setState({ user }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId === this.props.userId) {\n      return;\n    }\n\n    const { userId } = this.props;\n\n    getUser(userId).then(user => this.setState({ user }));\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user: ${user.id}`}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n        <button\n          className=\"CurrentUser__clear\"\n          type=\"button\"\n          onClick={this.props.clearUserInfo}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUserInfo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos().then(todos => this.setState({ todos }));\n  };\n\n  selectedUser = (userID) => {\n    this.setState({ selectedUserId: userID });\n  };\n\n  clearUserInfo = () => {\n    this.setState({ selectedUserId: 0 });\n  };\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectedUser={this.selectedUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUserInfo={this.clearUserInfo}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}